-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--S2_dffs[6] is FrameTiming:Frame|col_counter_vhdl:pixelCols|ext_counter_vhdl:col_counter|lpm_counter:counter_rtl_0|dffs[6]
S2_dffs[6]_p1_out = S2_dffs[1] & S2_dffs[0] & S2_dffs[2] & S2_dffs[3] & S2_dffs[4] & S2_dffs[5];
S2_dffs[6]_or_out = S2_dffs[6]_p1_out;
S2_dffs[6]_reg_input = S2_dffs[6]_or_out;
S2_dffs[6]_p2_out = !S2_dffs[1] & !S2_dffs[0] & S2_dffs[2] & !S2_dffs[3] & !S2_dffs[4] & S2_dffs[5] & S2_dffs[7] & S2_dffs[6];
S2_dffs[6] = TFFE(S2_dffs[6]_reg_input, NTSCClk, !S2_dffs[6]_p2_out, , );


--S2_dffs[7] is FrameTiming:Frame|col_counter_vhdl:pixelCols|ext_counter_vhdl:col_counter|lpm_counter:counter_rtl_0|dffs[7]
S2_dffs[7]_p1_out = S2_dffs[1] & S2_dffs[0] & S2_dffs[2] & S2_dffs[3] & S2_dffs[4] & S2_dffs[5] & S2_dffs[6];
S2_dffs[7]_or_out = S2_dffs[7]_p1_out;
S2_dffs[7]_reg_input = S2_dffs[7]_or_out;
S2_dffs[7]_p2_out = !S2_dffs[1] & !S2_dffs[0] & S2_dffs[2] & !S2_dffs[3] & !S2_dffs[4] & S2_dffs[5] & S2_dffs[6] & S2_dffs[7];
S2_dffs[7] = TFFE(S2_dffs[7]_reg_input, NTSCClk, !S2_dffs[7]_p2_out, , );


--S2_dffs[4] is FrameTiming:Frame|col_counter_vhdl:pixelCols|ext_counter_vhdl:col_counter|lpm_counter:counter_rtl_0|dffs[4]
S2_dffs[4]_p1_out = S2_dffs[1] & S2_dffs[0] & S2_dffs[2] & S2_dffs[3];
S2_dffs[4]_or_out = S2_dffs[4]_p1_out;
S2_dffs[4]_reg_input = S2_dffs[4]_or_out;
S2_dffs[4]_p2_out = !S2_dffs[1] & !S2_dffs[0] & S2_dffs[2] & !S2_dffs[3] & S2_dffs[5] & !S2_dffs[4] & S2_dffs[7] & S2_dffs[6];
S2_dffs[4] = TFFE(S2_dffs[4]_reg_input, NTSCClk, !S2_dffs[4]_p2_out, , );


--S2_dffs[3] is FrameTiming:Frame|col_counter_vhdl:pixelCols|ext_counter_vhdl:col_counter|lpm_counter:counter_rtl_0|dffs[3]
S2_dffs[3]_p1_out = S2_dffs[1] & S2_dffs[0] & S2_dffs[2];
S2_dffs[3]_or_out = S2_dffs[3]_p1_out;
S2_dffs[3]_reg_input = S2_dffs[3]_or_out;
S2_dffs[3]_p2_out = !S2_dffs[1] & !S2_dffs[0] & S2_dffs[2] & S2_dffs[5] & !S2_dffs[4] & !S2_dffs[3] & S2_dffs[7] & S2_dffs[6];
S2_dffs[3] = TFFE(S2_dffs[3]_reg_input, NTSCClk, !S2_dffs[3]_p2_out, , );


--S2_dffs[2] is FrameTiming:Frame|col_counter_vhdl:pixelCols|ext_counter_vhdl:col_counter|lpm_counter:counter_rtl_0|dffs[2]
S2_dffs[2]_p1_out = S2_dffs[1] & S2_dffs[0];
S2_dffs[2]_or_out = S2_dffs[2]_p1_out;
S2_dffs[2]_reg_input = S2_dffs[2]_or_out;
S2_dffs[2]_p2_out = !S2_dffs[1] & !S2_dffs[0] & S2_dffs[5] & S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & S2_dffs[7] & S2_dffs[6];
S2_dffs[2] = TFFE(S2_dffs[2]_reg_input, NTSCClk, !S2_dffs[2]_p2_out, , );


--S2_dffs[0] is FrameTiming:Frame|col_counter_vhdl:pixelCols|ext_counter_vhdl:col_counter|lpm_counter:counter_rtl_0|dffs[0]
S2_dffs[0]_reg_input = VCC;
S2_dffs[0]_p2_out = S2_dffs[5] & S2_dffs[2] & !S2_dffs[0] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & S2_dffs[7] & S2_dffs[6];
S2_dffs[0] = TFFE(S2_dffs[0]_reg_input, NTSCClk, !S2_dffs[0]_p2_out, , );


--S2_dffs[1] is FrameTiming:Frame|col_counter_vhdl:pixelCols|ext_counter_vhdl:col_counter|lpm_counter:counter_rtl_0|dffs[1]
S2_dffs[1]_or_out = S2_dffs[0];
S2_dffs[1]_reg_input = S2_dffs[1]_or_out;
S2_dffs[1]_p2_out = !S2_dffs[0] & S2_dffs[5] & S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & S2_dffs[7] & S2_dffs[6];
S2_dffs[1] = TFFE(S2_dffs[1]_reg_input, NTSCClk, !S2_dffs[1]_p2_out, , );


--S2_dffs[5] is FrameTiming:Frame|col_counter_vhdl:pixelCols|ext_counter_vhdl:col_counter|lpm_counter:counter_rtl_0|dffs[5]
S2_dffs[5]_p1_out = S2_dffs[1] & S2_dffs[0] & S2_dffs[2] & S2_dffs[3] & S2_dffs[4];
S2_dffs[5]_or_out = S2_dffs[5]_p1_out;
S2_dffs[5]_reg_input = S2_dffs[5]_or_out;
S2_dffs[5]_p2_out = !S2_dffs[1] & !S2_dffs[0] & S2_dffs[2] & !S2_dffs[3] & !S2_dffs[4] & S2_dffs[5] & S2_dffs[7] & S2_dffs[6];
S2_dffs[5] = TFFE(S2_dffs[5]_reg_input, NTSCClk, !S2_dffs[5]_p2_out, , );


--D1L3 is FrameTiming:Frame|LessThan3~6
D1L3_p1_out = !S2_dffs[3] & !S2_dffs[4] & !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6];
D1L3_p2_out = !S2_dffs[4] & !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6] & !S2_dffs[2];
D1L3_p3_out = !S2_dffs[4] & !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6] & !S2_dffs[1];
D1L3_or_out = D1L3_p1_out # D1L3_p2_out # D1L3_p3_out;
D1L3 = !(D1L3_or_out);


--S1_dffs[7] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[7]
S1_dffs[7]_p1_out = S1_dffs[3] & S1_dffs[2] & S1_dffs[1] & S1_dffs[0] & S1_dffs[4] & S1_dffs[5] & S1_dffs[6];
S1_dffs[7]_or_out = S1_dffs[7]_p1_out;
S1_dffs[7]_reg_input = S1_dffs[7]_or_out;
S1_dffs[7]_p3_out = S2_dffs[5] & S2_dffs[2] & !S2_dffs[0] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & S2_dffs[7] & S2_dffs[6];
S1_dffs[7]_p2_out = !S1_dffs[3] & !S1_dffs[6] & Q1L1 & Q1L2 & D1L6 & D1L7 & S1_dffs[8] & !S1_dffs[7];
S1_dffs[7] = TFFE(S1_dffs[7]_reg_input, S1_dffs[7]_p3_out, !S1_dffs[7]_p2_out, , );


--Q1L1 is FrameTiming:Frame|row_counter_vhdl:pixelRows|Equal0~12
Q1L1_p2_out = !NTSCClk & !S2_dffs[5] & !S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & !S2_dffs[7] & !S2_dffs[6];
Q1L1_p3_out = !S2_dffs[5] & !S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & !S2_dffs[7] & !S2_dffs[6] & !S2_dffs[0];
Q1L1_or_out = Q1L1_p2_out # Q1L1_p3_out # !C1_FormatOut;
Q1L1 = S1_dffs[1] $ Q1L1_or_out;


--Q1L2 is FrameTiming:Frame|row_counter_vhdl:pixelRows|Equal0~18
Q1L2_p2_out = !NTSCClk & !S2_dffs[5] & !S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & !S2_dffs[7] & !S2_dffs[6];
Q1L2_p3_out = !S2_dffs[5] & !S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & !S2_dffs[7] & !S2_dffs[6] & !S2_dffs[0];
Q1L2_or_out = Q1L2_p2_out # Q1L2_p3_out # !C1_FormatOut;
Q1L2 = S1_dffs[4] $ Q1L2_or_out;


--D1L6 is FrameTiming:Frame|LessThan9~12
D1L6_p2_out = !NTSCClk & !S2_dffs[5] & !S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & !S2_dffs[7] & !S2_dffs[6];
D1L6_p3_out = !S2_dffs[5] & !S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & !S2_dffs[7] & !S2_dffs[6] & !S2_dffs[0];
D1L6_or_out = D1L6_p2_out # D1L6_p3_out # !C1_FormatOut;
D1L6 = S1_dffs[2] $ D1L6_or_out;


--D1L7 is FrameTiming:Frame|LessThan9~18
D1L7_p2_out = !NTSCClk & !S2_dffs[5] & !S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & !S2_dffs[7] & !S2_dffs[6];
D1L7_p3_out = !S2_dffs[5] & !S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & !S2_dffs[7] & !S2_dffs[6] & !S2_dffs[0];
D1L7_or_out = D1L7_p2_out # D1L7_p3_out # !C1_FormatOut;
D1L7 = S1_dffs[5] $ D1L7_or_out;


--S1_dffs[6] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[6]
S1_dffs[6]_p1_out = S1_dffs[3] & S1_dffs[2] & S1_dffs[1] & S1_dffs[0] & S1_dffs[4] & S1_dffs[5];
S1_dffs[6]_or_out = S1_dffs[6]_p1_out;
S1_dffs[6]_reg_input = S1_dffs[6]_or_out;
S1_dffs[6]_p3_out = S2_dffs[5] & S2_dffs[2] & !S2_dffs[0] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & S2_dffs[7] & S2_dffs[6];
S1_dffs[6]_p2_out = !S1_dffs[3] & Q1L1 & Q1L2 & D1L6 & D1L7 & S1_dffs[8] & !S1_dffs[7] & !S1_dffs[6];
S1_dffs[6] = TFFE(S1_dffs[6]_reg_input, S1_dffs[6]_p3_out, !S1_dffs[6]_p2_out, , );


--S1_dffs[4] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[4]
S1_dffs[4]_p1_out = S1_dffs[3] & S1_dffs[2] & S1_dffs[1] & S1_dffs[0];
S1_dffs[4]_or_out = S1_dffs[4]_p1_out;
S1_dffs[4]_reg_input = S1_dffs[4]_or_out;
S1_dffs[4]_p3_out = S2_dffs[5] & S2_dffs[2] & !S2_dffs[0] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & S2_dffs[7] & S2_dffs[6];
S1_dffs[4]_p2_out = !S1_dffs[3] & Q1L1 & Q1L2 & D1L6 & D1L7 & S1_dffs[8] & !S1_dffs[7] & !S1_dffs[6];
S1_dffs[4] = TFFE(S1_dffs[4]_reg_input, S1_dffs[4]_p3_out, !S1_dffs[4]_p2_out, , );


--S1_dffs[5] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[5]
S1_dffs[5]_p1_out = S1_dffs[3] & S1_dffs[2] & S1_dffs[1] & S1_dffs[0] & S1_dffs[4];
S1_dffs[5]_or_out = S1_dffs[5]_p1_out;
S1_dffs[5]_reg_input = S1_dffs[5]_or_out;
S1_dffs[5]_p3_out = S2_dffs[5] & S2_dffs[2] & !S2_dffs[0] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & S2_dffs[7] & S2_dffs[6];
S1_dffs[5]_p2_out = !S1_dffs[3] & Q1L1 & Q1L2 & D1L6 & D1L7 & S1_dffs[8] & !S1_dffs[7] & !S1_dffs[6];
S1_dffs[5] = TFFE(S1_dffs[5]_reg_input, S1_dffs[5]_p3_out, !S1_dffs[5]_p2_out, , );


--C1_FormatOut is FormatSwitch:FormatSelect|FormatOut
C1_FormatOut_or_out = RequestFormat;
C1_FormatOut_reg_input = C1_FormatOut_or_out;
C1_FormatOut = DFFE(C1_FormatOut_reg_input, D1L1, , , );


--B1L1 is ClockSwitch:ColourClock|Clk~5
B1L1_p1_out = PALClk & C1_FormatOut;
B1L1_p2_out = !C1_FormatOut & NTSCClk;
B1L1_or_out = B1L1_p1_out # B1L1_p2_out;
B1L1 = B1L1_or_out;


--S1_dffs[0] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[0]
S1_dffs[0]_reg_input = VCC;
S1_dffs[0]_p3_out = S2_dffs[5] & S2_dffs[2] & !S2_dffs[0] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & S2_dffs[7] & S2_dffs[6];
S1_dffs[0]_p2_out = Q1L1 & Q1L2 & D1L6 & D1L7 & S1_dffs[8] & !S1_dffs[7] & !S1_dffs[6] & !S1_dffs[3];
S1_dffs[0] = TFFE(S1_dffs[0]_reg_input, S1_dffs[0]_p3_out, !S1_dffs[0]_p2_out, , );


--S1_dffs[1] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[1]
S1_dffs[1]_or_out = S1_dffs[0];
S1_dffs[1]_reg_input = S1_dffs[1]_or_out;
S1_dffs[1]_p3_out = S2_dffs[5] & S2_dffs[2] & !S2_dffs[0] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & S2_dffs[7] & S2_dffs[6];
S1_dffs[1]_p2_out = Q1L1 & Q1L2 & D1L6 & D1L7 & S1_dffs[8] & !S1_dffs[7] & !S1_dffs[6] & !S1_dffs[3];
S1_dffs[1] = TFFE(S1_dffs[1]_reg_input, S1_dffs[1]_p3_out, !S1_dffs[1]_p2_out, , );


--S1_dffs[2] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[2]
S1_dffs[2]_p1_out = S1_dffs[1] & S1_dffs[0];
S1_dffs[2]_or_out = S1_dffs[2]_p1_out;
S1_dffs[2]_reg_input = S1_dffs[2]_or_out;
S1_dffs[2]_p3_out = S2_dffs[5] & S2_dffs[2] & !S2_dffs[0] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & S2_dffs[7] & S2_dffs[6];
S1_dffs[2]_p2_out = Q1L1 & Q1L2 & D1L6 & D1L7 & S1_dffs[8] & !S1_dffs[7] & !S1_dffs[6] & !S1_dffs[3];
S1_dffs[2] = TFFE(S1_dffs[2]_reg_input, S1_dffs[2]_p3_out, !S1_dffs[2]_p2_out, , );


--S1_dffs[3] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[3]
S1_dffs[3]_p1_out = S1_dffs[2] & S1_dffs[1] & S1_dffs[0];
S1_dffs[3]_or_out = S1_dffs[3]_p1_out;
S1_dffs[3]_reg_input = S1_dffs[3]_or_out;
S1_dffs[3]_p3_out = S2_dffs[5] & S2_dffs[2] & !S2_dffs[0] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & S2_dffs[7] & S2_dffs[6];
S1_dffs[3]_p2_out = Q1L1 & Q1L2 & D1L6 & D1L7 & S1_dffs[8] & !S1_dffs[7] & !S1_dffs[6] & !S1_dffs[3];
S1_dffs[3] = TFFE(S1_dffs[3]_reg_input, S1_dffs[3]_p3_out, !S1_dffs[3]_p2_out, , );


--S1_dffs[8] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[8]
S1_dffs[8]_p1_out = S1_dffs[3] & S1_dffs[2] & S1_dffs[1] & S1_dffs[0] & S1_dffs[4] & S1_dffs[5] & S1_dffs[6] & S1_dffs[7];
S1_dffs[8]_or_out = S1_dffs[8]_p1_out;
S1_dffs[8]_reg_input = S1_dffs[8]_or_out;
S1_dffs[8]_p3_out = S2_dffs[5] & S2_dffs[2] & !S2_dffs[0] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & S2_dffs[7] & S2_dffs[6];
S1_dffs[8]_p2_out = !S1_dffs[3] & !S1_dffs[6] & !S1_dffs[7] & Q1L1 & Q1L2 & D1L6 & D1L7 & S1_dffs[8];
S1_dffs[8] = TFFE(S1_dffs[8]_reg_input, S1_dffs[8]_p3_out, !S1_dffs[8]_p2_out, , );


--D1L2 is FrameTiming:Frame|LessThan2~4
D1L2_p1_out = !S1_dffs[8] & !S1_dffs[5] & !S1_dffs[4] & !S1_dffs[7] & !S1_dffs[6] & !S1_dffs[3];
D1L2_or_out = D1L2_p1_out;
D1L2 = !(D1L2_or_out);


--L1L4 is videoMux:outputStream|Mux8~14
L1L4_p1_out = !S2_dffs[1] & !S2_dffs[3] & !S2_dffs[2] & !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6];
L1L4_p2_out = !S2_dffs[3] & !S2_dffs[2] & !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6] & !S2_dffs[0];
L1L4_p3_out = !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6] & !S2_dffs[4];
L1L4_or_out = L1L12 # !CSS # L1L4_p1_out # L1L4_p2_out # L1L4_p3_out # !AnG;
L1L4 = !(L1L4_or_out);


--L1L5 is videoMux:outputStream|Mux8~21
L1L5_p1_out = !S2_dffs[1] & !S2_dffs[3] & !S2_dffs[2] & !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6];
L1L5_p2_out = !S2_dffs[3] & !S2_dffs[2] & !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6] & !S2_dffs[0];
L1L5_p3_out = !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6] & !S2_dffs[4];
L1L5_or_out = L1L13 # !CSS # L1L5_p1_out # L1L5_p2_out # L1L5_p3_out # !AnG;
L1L5 = !(L1L5_or_out);


--L1L6 is videoMux:outputStream|Mux8~28
L1L6_p1_out = !S2_dffs[1] & !S2_dffs[3] & !S2_dffs[2] & !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6];
L1L6_p2_out = !S2_dffs[3] & !S2_dffs[2] & !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6] & !S2_dffs[0];
L1L6_p3_out = !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6] & !S2_dffs[4];
L1L6_or_out = L1L14 # !CSS # L1L6_p1_out # L1L6_p2_out # L1L6_p3_out # !AnG;
L1L6 = !(L1L6_or_out);


--D1L5 is FrameTiming:Frame|LessThan8~6
D1L5_p1_out = !NTSCClk & !S2_dffs[0] & !S2_dffs[5] & !S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1];
D1L5_or_out = D1L5_p1_out # !S2_dffs[7] # !S2_dffs[6];
D1L5 = D1L5_or_out;


--D1L4 is FrameTiming:Frame|LessThan7~4
D1L4_p1_out = !S2_dffs[0] & !S2_dffs[5] & !S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[7] & !S2_dffs[1];
D1L4_p2_out = !S2_dffs[7] & !S2_dffs[6];
D1L4_or_out = D1L4_p1_out # D1L4_p2_out;
D1L4 = D1L4_or_out;


--D1L8 is FrameTiming:Frame|LessThan9~29
D1L8_p0_out = S1_dffs[6] & !S2_dffs[5] & !S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & !S2_dffs[7] & !S2_dffs[6] & !S2_dffs[0];
D1L8_p1_out = S1_dffs[6] & S1_dffs[4] & S1_dffs[3] & S1_dffs[1];
D1L8_p2_out = S1_dffs[6] & S1_dffs[4] & S1_dffs[3] & S1_dffs[2];
D1L8_p3_out = S1_dffs[6] & !C1_FormatOut;
D1L8_p4_out = S1_dffs[6] & !NTSCClk & !S2_dffs[5] & !S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & !S2_dffs[7] & !S2_dffs[6];
D1L8_or_out = D1L9 # D1L8_p0_out # D1L8_p1_out # D1L8_p2_out # D1L8_p3_out # D1L8_p4_out;
D1L8 = D1L8_or_out;


--D1L10 is FrameTiming:Frame|active[0]~18
D1L10_p0_out = S1_dffs[8] & S1_dffs[2] & S1_dffs[1] & S1_dffs[4] & S1_dffs[0];
D1L10_p1_out = S1_dffs[5] & !NTSCClk & !S2_dffs[5] & !S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & !S2_dffs[7] & !S2_dffs[6] & S1_dffs[6] & S1_dffs[2] & S1_dffs[1] & S1_dffs[4] & S1_dffs[3] & S1_dffs[7];
D1L10_p2_out = S1_dffs[8] & !NTSCClk & !S2_dffs[5] & !S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & !S2_dffs[7] & !S2_dffs[6];
D1L10_p3_out = S1_dffs[8] & S1_dffs[7];
D1L10_p4_out = S1_dffs[8] & S1_dffs[4] & S1_dffs[3];
D1L10_or_out = D1L12 # D1L10_p0_out # D1L10_p1_out # D1L10_p2_out # D1L10_p3_out # D1L10_p4_out;
D1L10 = D1L10_or_out;


--L1L8 is videoMux:outputStream|Mux8~37
L1L8_p1_out = !S2_dffs[1] & !S2_dffs[3] & !S2_dffs[2] & !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6];
L1L8_p2_out = !S2_dffs[3] & !S2_dffs[2] & !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6] & !S2_dffs[0];
L1L8_p3_out = !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6] & !S2_dffs[4];
L1L8_or_out = L1L15 # !CSS # L1L8_p1_out # L1L8_p2_out # L1L8_p3_out # !AnG;
L1L8 = L1L8_or_out;


--L1L9 is videoMux:outputStream|Mux8~40
L1L9_p2_out = AnG & D1L5 & !D1L4 & D1L8 & !D1L10 & L1L8 & L1L7 & D1L1 & D1L13 & D1L14 & D1L15;
L1L9_p3_out = !AnG & D1L5 & !D1L4 & D1L8 & !D1L10 & !L1L8 & D1L1 & D1L13 & D1L14 & D1L15;
L1L9_p4_out = D1L5 & !D1L4 & D1L8 & !D1L10 & !L1L8 & !CSS & GM[0] & D1L1 & D1L13 & D1L14 & D1L15;
L1L9_or_out = L1L9_p2_out # L1L9_p3_out # L1L9_p4_out;
L1L9 = !L1L8 $ L1L9_or_out;


--L1L1 is videoMux:outputStream|Mux5~12
L1L1_p0_out = AnG & D1L10 & D1L1 & D1L13 & D1L14 & D1L15;
L1L1_p1_out = GM[0] & AnG & D1L1 & D1L13 & D1L14 & D1L15;
L1L1_p2_out = AnG & !D1L5 & D1L1 & D1L13 & D1L14 & D1L15;
L1L1_p3_out = AnG & D1L4 & D1L1 & D1L13 & D1L14 & D1L15;
L1L1_p4_out = AnG & !D1L8 & D1L1 & D1L13 & D1L14 & D1L15;
L1L1_or_out = L1L1_p0_out # L1L1_p1_out # L1L1_p2_out # L1L1_p3_out # L1L1_p4_out;
L1L1 = L1L1_or_out;


--L1L10 is videoMux:outputStream|Mux8~46
L1L10_p2_out = AnG & D1L5 & !D1L4 & D1L8 & !D1L10 & L1L8 & L1L7 & D1L1 & D1L13 & D1L14 & D1L15;
L1L10_p3_out = !AnG & D1L5 & !D1L4 & D1L8 & !D1L10 & !L1L8 & D1L1 & D1L13 & D1L14 & D1L15;
L1L10_p4_out = D1L5 & !D1L4 & D1L8 & !D1L10 & !L1L8 & !CSS & GM[0] & D1L1 & D1L13 & D1L14 & D1L15;
L1L10_or_out = L1L10_p2_out # L1L10_p3_out # L1L10_p4_out;
L1L10 = !L1L8 $ L1L10_or_out;


--L1L11 is videoMux:outputStream|Mux8~52
L1L11_p2_out = AnG & D1L5 & !D1L4 & D1L8 & !D1L10 & L1L8 & L1L7 & D1L1 & D1L13 & D1L14 & D1L15;
L1L11_p3_out = !AnG & D1L5 & !D1L4 & D1L8 & !D1L10 & !L1L8 & D1L1 & D1L13 & D1L14 & D1L15;
L1L11_p4_out = D1L5 & !D1L4 & D1L8 & !D1L10 & !L1L8 & !CSS & GM[0] & D1L1 & D1L13 & D1L14 & D1L15;
L1L11_or_out = L1L11_p2_out # L1L11_p3_out # L1L11_p4_out;
L1L11 = !L1L8 $ L1L11_or_out;


--L1L2 is videoMux:outputStream|Mux5~18
L1L2_p0_out = AnG & D1L10 & D1L1 & D1L13 & D1L14 & D1L15;
L1L2_p1_out = GM[0] & AnG & D1L1 & D1L13 & D1L14 & D1L15;
L1L2_p2_out = AnG & !D1L5 & D1L1 & D1L13 & D1L14 & D1L15;
L1L2_p3_out = AnG & D1L4 & D1L1 & D1L13 & D1L14 & D1L15;
L1L2_p4_out = AnG & !D1L8 & D1L1 & D1L13 & D1L14 & D1L15;
L1L2_or_out = L1L2_p0_out # L1L2_p1_out # L1L2_p2_out # L1L2_p3_out # L1L2_p4_out;
L1L2 = L1L2_or_out;


--L1L3 is videoMux:outputStream|Mux5~24
L1L3_p0_out = AnG & D1L10 & D1L1 & D1L13 & D1L14 & D1L15;
L1L3_p1_out = GM[0] & AnG & D1L1 & D1L13 & D1L14 & D1L15;
L1L3_p2_out = AnG & !D1L5 & D1L1 & D1L13 & D1L14 & D1L15;
L1L3_p3_out = AnG & D1L4 & D1L1 & D1L13 & D1L14 & D1L15;
L1L3_p4_out = AnG & !D1L8 & D1L1 & D1L13 & D1L14 & D1L15;
L1L3_or_out = L1L3_p0_out # L1L3_p1_out # L1L3_p2_out # L1L3_p3_out # L1L3_p4_out;
L1L3 = L1L3_or_out;


--L1L12 is videoMux:outputStream|Mux8~58
L1L12_p1_out = !S1_dffs[8] & !S1_dffs[5] & !S1_dffs[4] & !S1_dffs[7] & !S1_dffs[6] & !S1_dffs[3];
L1L12 = L1L12_p1_out;


--L1L13 is videoMux:outputStream|Mux8~60
L1L13_p1_out = !S1_dffs[8] & !S1_dffs[5] & !S1_dffs[4] & !S1_dffs[7] & !S1_dffs[6] & !S1_dffs[3];
L1L13 = L1L13_p1_out;


--L1L14 is videoMux:outputStream|Mux8~62
L1L14_p1_out = !S1_dffs[8] & !S1_dffs[5] & !S1_dffs[4] & !S1_dffs[7] & !S1_dffs[6] & !S1_dffs[3];
L1L14 = L1L14_p1_out;


--D1L9 is FrameTiming:Frame|LessThan9~30
D1L9_p3_out = S1_dffs[5] & S1_dffs[6];
D1L9_p4_out = S1_dffs[6] & S1_dffs[4] & S1_dffs[3] & S1_dffs[0];
D1L9 = S1_dffs[8] # S1_dffs[7] # D1L9_p3_out # D1L9_p4_out;


--D1L11 is FrameTiming:Frame|active[0]~19
D1L11_p1_out = S1_dffs[5] & S1_dffs[8];
D1L11 = D1L11_p1_out;


--D1L12 is FrameTiming:Frame|active[0]~21
D1L12_p0_out = !S2_dffs[0] & !S2_dffs[5] & !S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & !S2_dffs[7] & !S2_dffs[6] & S1_dffs[8];
D1L12_p1_out = S1_dffs[2] & S1_dffs[1] & S1_dffs[4] & S1_dffs[3] & S1_dffs[7] & S1_dffs[5] & S1_dffs[6] & !C1_FormatOut;
D1L12_p2_out = S1_dffs[2] & S1_dffs[1] & S1_dffs[4] & S1_dffs[3] & S1_dffs[7] & S1_dffs[5] & !S2_dffs[0] & !S2_dffs[5] & !S2_dffs[2] & !S2_dffs[4] & !S2_dffs[3] & !S2_dffs[1] & !S2_dffs[7] & !S2_dffs[6] & S1_dffs[6];
D1L12_p3_out = S1_dffs[6] & S1_dffs[8];
D1L12_p4_out = !C1_FormatOut & S1_dffs[8];
D1L12 = D1L11 # D1L12_p0_out # D1L12_p1_out # D1L12_p2_out # D1L12_p3_out # D1L12_p4_out;


--L1L15 is videoMux:outputStream|Mux8~64
L1L15_p1_out = !S1_dffs[8] & !S1_dffs[5] & !S1_dffs[4] & !S1_dffs[7] & !S1_dffs[6] & !S1_dffs[3];
L1L15 = L1L15_p1_out;


--~GND~0 is ~GND~0
~GND~0_or_out = GND;
~GND~0 = ~GND~0_or_out;


--~GND~1 is ~GND~1
~GND~1_or_out = GND;
~GND~1 = ~GND~1_or_out;


--~GND~2 is ~GND~2
~GND~2_or_out = GND;
~GND~2 = ~GND~2_or_out;


--~GND~3 is ~GND~3
~GND~3_or_out = GND;
~GND~3 = ~GND~3_or_out;


--~GND~4 is ~GND~4
~GND~4_or_out = GND;
~GND~4 = ~GND~4_or_out;


--~GND~5 is ~GND~5
~GND~5_or_out = GND;
~GND~5 = ~GND~5_or_out;


--~GND~6 is ~GND~6
~GND~6_or_out = GND;
~GND~6 = ~GND~6_or_out;


--~GND~7 is ~GND~7
~GND~7_or_out = GND;
~GND~7 = ~GND~7_or_out;


--~GND~8 is ~GND~8
~GND~8_or_out = GND;
~GND~8 = ~GND~8_or_out;


--~GND~9 is ~GND~9
~GND~9_or_out = GND;
~GND~9 = ~GND~9_or_out;


--~GND~10 is ~GND~10
~GND~10_or_out = GND;
~GND~10 = ~GND~10_or_out;


--~GND~11 is ~GND~11
~GND~11_or_out = GND;
~GND~11 = ~GND~11_or_out;


--~GND~12 is ~GND~12
~GND~12_or_out = GND;
~GND~12 = ~GND~12_or_out;


--~GND~13 is ~GND~13
~GND~13_or_out = GND;
~GND~13 = ~GND~13_or_out;


--L1L7 is videoMux:outputStream|Mux8~32sexp
L1L7 = EXP(!CSS & GM[0]);


--D1L13 is FrameTiming:Frame|always2~8sexp2
D1L13 = EXP(!S2_dffs[4] & !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6]);


--D1L14 is FrameTiming:Frame|always2~8sexp3
D1L14 = EXP(!S2_dffs[1] & !S2_dffs[3] & !S2_dffs[2] & !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6]);


--D1L15 is FrameTiming:Frame|always2~8sexp4
D1L15 = EXP(!S2_dffs[0] & !S2_dffs[3] & !S2_dffs[2] & !S2_dffs[5] & !S2_dffs[7] & !S2_dffs[6]);


--D1L1 is FrameTiming:Frame|LessThan2~3bal
D1L1_p1_out = !S1_dffs[8] & !S1_dffs[5] & !S1_dffs[4] & !S1_dffs[7] & !S1_dffs[6] & !S1_dffs[3];
D1L1_or_out = D1L1_p1_out;
D1L1 = !(D1L1_or_out);


--NTSCClk is NTSCClk
--operation mode is input

NTSCClk = INPUT();


--PALClk is PALClk
--operation mode is input

PALClk = INPUT();


--RequestFormat is RequestFormat
--operation mode is input

RequestFormat = INPUT();


--Q[0] is Q[0]
--operation mode is input

Q[0] = INPUT();


--Q[1] is Q[1]
--operation mode is input

Q[1] = INPUT();


--Q[2] is Q[2]
--operation mode is input

Q[2] = INPUT();


--Q[3] is Q[3]
--operation mode is input

Q[3] = INPUT();


--Q[4] is Q[4]
--operation mode is input

Q[4] = INPUT();


--Q[5] is Q[5]
--operation mode is input

Q[5] = INPUT();


--Q[6] is Q[6]
--operation mode is input

Q[6] = INPUT();


--Q[7] is Q[7]
--operation mode is input

Q[7] = INPUT();


--Inv is Inv
--operation mode is input

Inv = INPUT();


--AnG is AnG
--operation mode is input

AnG = INPUT();


--AnS is AnS
--operation mode is input

AnS = INPUT();


--CSS is CSS
--operation mode is input

CSS = INPUT();


--GM[0] is GM[0]
--operation mode is input

GM[0] = INPUT();


--GM[1] is GM[1]
--operation mode is input

GM[1] = INPUT();


--GM[2] is GM[2]
--operation mode is input

GM[2] = INPUT();


--Ext is Ext
--operation mode is input

Ext = INPUT();


--DA[0] is DA[0]
--operation mode is output

DA[0] = OUTPUT(~GND~0);


--DA[1] is DA[1]
--operation mode is output

DA[1] = OUTPUT(~GND~1);


--DA[2] is DA[2]
--operation mode is output

DA[2] = OUTPUT(~GND~2);


--DA[3] is DA[3]
--operation mode is output

DA[3] = OUTPUT(~GND~3);


--DA[4] is DA[4]
--operation mode is output

DA[4] = OUTPUT(~GND~4);


--DA[5] is DA[5]
--operation mode is output

DA[5] = OUTPUT(~GND~5);


--DA[6] is DA[6]
--operation mode is output

DA[6] = OUTPUT(~GND~6);


--DA[7] is DA[7]
--operation mode is output

DA[7] = OUTPUT(~GND~7);


--DA[8] is DA[8]
--operation mode is output

DA[8] = OUTPUT(~GND~8);


--DA[9] is DA[9]
--operation mode is output

DA[9] = OUTPUT(~GND~9);


--DA[10] is DA[10]
--operation mode is output

DA[10] = OUTPUT(~GND~10);


--DA[11] is DA[11]
--operation mode is output

DA[11] = OUTPUT(~GND~11);


--DA[12] is DA[12]
--operation mode is output

DA[12] = OUTPUT(~GND~12);


--RP is RP
--operation mode is output

RP = OUTPUT(~GND~13);


--HSn is HSn
--operation mode is output

HSn = OUTPUT(D1L3);


--Format is Format
--operation mode is output

Format = OUTPUT(C1_FormatOut);


--FormatClk is FormatClk
--operation mode is output

FormatClk = OUTPUT(B1L1);


--FSn is FSn
--operation mode is output

FSn = OUTPUT(D1L2);


--rgb[1] is rgb[1]
--operation mode is output

rgb[1] = OUTPUT(L1L4);


--rgb[7] is rgb[7]
--operation mode is output

rgb[7] = OUTPUT(L1L6);


--rgb[8] is rgb[8]
--operation mode is output

rgb[8] = OUTPUT(L1L5);


--rgb[0] is rgb[0]
--operation mode is output

rgb[0] = OUTPUT(L1L9);


--rgb[2] is rgb[2]
--operation mode is output

rgb[2] = OUTPUT(L1L10);


--rgb[3] is rgb[3]
--operation mode is output

rgb[3] = OUTPUT(L1L1);


--rgb[6] is rgb[6]
--operation mode is output

rgb[6] = OUTPUT(L1L11);


--rgb[4] is rgb[4]
--operation mode is output

rgb[4] = OUTPUT(L1L3);


--rgb[5] is rgb[5]
--operation mode is output

rgb[5] = OUTPUT(L1L2);


