-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--J2_dffs[3] is FrameTiming:Frame|col_counter_vhdl:pixelCols|ext_counter_vhdl:col_counter|lpm_counter:counter_rtl_0|dffs[3]
J2_dffs[3]_p1_out = J2_dffs[1] & J2_dffs[0] & J2_dffs[2];
J2_dffs[3]_or_out = J2_dffs[3]_p1_out;
J2_dffs[3]_reg_input = J2_dffs[3]_or_out;
J2_dffs[3]_p2_out = !J2_dffs[1] & !J2_dffs[0] & J2_dffs[2] & J2_dffs[7] & J2_dffs[6] & J2_dffs[5] & !J2_dffs[4] & !J2_dffs[3];
J2_dffs[3] = TFFE(J2_dffs[3]_reg_input, NTSCClk, !J2_dffs[3]_p2_out, , );


--J2_dffs[2] is FrameTiming:Frame|col_counter_vhdl:pixelCols|ext_counter_vhdl:col_counter|lpm_counter:counter_rtl_0|dffs[2]
J2_dffs[2]_p1_out = J2_dffs[1] & J2_dffs[0];
J2_dffs[2]_or_out = J2_dffs[2]_p1_out;
J2_dffs[2]_reg_input = J2_dffs[2]_or_out;
J2_dffs[2]_p2_out = !J2_dffs[1] & !J2_dffs[0] & J2_dffs[7] & J2_dffs[6] & J2_dffs[5] & !J2_dffs[4] & J2_dffs[2] & !J2_dffs[3];
J2_dffs[2] = TFFE(J2_dffs[2]_reg_input, NTSCClk, !J2_dffs[2]_p2_out, , );


--J2_dffs[4] is FrameTiming:Frame|col_counter_vhdl:pixelCols|ext_counter_vhdl:col_counter|lpm_counter:counter_rtl_0|dffs[4]
J2_dffs[4]_p1_out = J2_dffs[1] & J2_dffs[0] & J2_dffs[2] & J2_dffs[3];
J2_dffs[4]_or_out = J2_dffs[4]_p1_out;
J2_dffs[4]_reg_input = J2_dffs[4]_or_out;
J2_dffs[4]_p2_out = !J2_dffs[1] & !J2_dffs[0] & J2_dffs[2] & !J2_dffs[3] & J2_dffs[7] & J2_dffs[6] & J2_dffs[5] & !J2_dffs[4];
J2_dffs[4] = TFFE(J2_dffs[4]_reg_input, NTSCClk, !J2_dffs[4]_p2_out, , );


--J2_dffs[5] is FrameTiming:Frame|col_counter_vhdl:pixelCols|ext_counter_vhdl:col_counter|lpm_counter:counter_rtl_0|dffs[5]
J2_dffs[5]_p1_out = J2_dffs[1] & J2_dffs[0] & J2_dffs[2] & J2_dffs[3] & J2_dffs[4];
J2_dffs[5]_or_out = J2_dffs[5]_p1_out;
J2_dffs[5]_reg_input = J2_dffs[5]_or_out;
J2_dffs[5]_p2_out = !J2_dffs[1] & !J2_dffs[0] & J2_dffs[2] & !J2_dffs[3] & !J2_dffs[4] & J2_dffs[7] & J2_dffs[6] & J2_dffs[5];
J2_dffs[5] = TFFE(J2_dffs[5]_reg_input, NTSCClk, !J2_dffs[5]_p2_out, , );


--J2_dffs[6] is FrameTiming:Frame|col_counter_vhdl:pixelCols|ext_counter_vhdl:col_counter|lpm_counter:counter_rtl_0|dffs[6]
J2_dffs[6]_p1_out = J2_dffs[1] & J2_dffs[0] & J2_dffs[2] & J2_dffs[3] & J2_dffs[4] & J2_dffs[5];
J2_dffs[6]_or_out = J2_dffs[6]_p1_out;
J2_dffs[6]_reg_input = J2_dffs[6]_or_out;
J2_dffs[6]_p2_out = !J2_dffs[1] & !J2_dffs[0] & J2_dffs[2] & !J2_dffs[3] & !J2_dffs[4] & J2_dffs[5] & J2_dffs[7] & J2_dffs[6];
J2_dffs[6] = TFFE(J2_dffs[6]_reg_input, NTSCClk, !J2_dffs[6]_p2_out, , );


--J2_dffs[0] is FrameTiming:Frame|col_counter_vhdl:pixelCols|ext_counter_vhdl:col_counter|lpm_counter:counter_rtl_0|dffs[0]
J2_dffs[0]_reg_input = VCC;
J2_dffs[0]_p2_out = J2_dffs[7] & J2_dffs[6] & J2_dffs[5] & !J2_dffs[4] & J2_dffs[2] & !J2_dffs[0] & !J2_dffs[3] & !J2_dffs[1];
J2_dffs[0] = TFFE(J2_dffs[0]_reg_input, NTSCClk, !J2_dffs[0]_p2_out, , );


--J2_dffs[1] is FrameTiming:Frame|col_counter_vhdl:pixelCols|ext_counter_vhdl:col_counter|lpm_counter:counter_rtl_0|dffs[1]
J2_dffs[1]_or_out = J2_dffs[0];
J2_dffs[1]_reg_input = J2_dffs[1]_or_out;
J2_dffs[1]_p2_out = !J2_dffs[0] & J2_dffs[7] & J2_dffs[6] & J2_dffs[5] & !J2_dffs[4] & J2_dffs[2] & !J2_dffs[3] & !J2_dffs[1];
J2_dffs[1] = TFFE(J2_dffs[1]_reg_input, NTSCClk, !J2_dffs[1]_p2_out, , );


--J2_dffs[7] is FrameTiming:Frame|col_counter_vhdl:pixelCols|ext_counter_vhdl:col_counter|lpm_counter:counter_rtl_0|dffs[7]
J2_dffs[7]_p1_out = J2_dffs[1] & J2_dffs[0] & J2_dffs[2] & J2_dffs[3] & J2_dffs[4] & J2_dffs[5] & J2_dffs[6];
J2_dffs[7]_or_out = J2_dffs[7]_p1_out;
J2_dffs[7]_reg_input = J2_dffs[7]_or_out;
J2_dffs[7]_p2_out = !J2_dffs[1] & !J2_dffs[0] & J2_dffs[2] & !J2_dffs[3] & !J2_dffs[4] & J2_dffs[5] & J2_dffs[6] & J2_dffs[7];
J2_dffs[7] = TFFE(J2_dffs[7]_reg_input, NTSCClk, !J2_dffs[7]_p2_out, , );


--D1L3 is FrameTiming:Frame|LessThan3~8
D1L3_p1_out = !J2_dffs[3] & !J2_dffs[7] & !J2_dffs[6] & !J2_dffs[5] & !J2_dffs[4];
D1L3_p2_out = !J2_dffs[7] & !J2_dffs[6] & !J2_dffs[5] & !J2_dffs[4] & !J2_dffs[2];
D1L3_p3_out = !J2_dffs[7] & !J2_dffs[6] & !J2_dffs[5] & !J2_dffs[4] & !J2_dffs[1];
D1L3_p4_out = !J2_dffs[7] & !J2_dffs[6] & !J2_dffs[5] & !J2_dffs[4] & !NTSCClk & !J2_dffs[0];
D1L3_or_out = D1L3_p1_out # D1L3_p2_out # D1L3_p3_out # D1L3_p4_out;
D1L3 = !(D1L3_or_out);


--J1_dffs[7] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[7]
J1_dffs[7]_p1_out = J1_dffs[1] & J1_dffs[0] & J1_dffs[2] & J1_dffs[3] & J1_dffs[4] & J1_dffs[5] & J1_dffs[6];
J1_dffs[7]_or_out = J1_dffs[7]_p1_out;
J1_dffs[7]_reg_input = J1_dffs[7]_or_out;
J1_dffs[7]_p3_out = J2_dffs[7] & J2_dffs[6] & J2_dffs[5] & !J2_dffs[4] & J2_dffs[2] & !J2_dffs[0] & !J2_dffs[3] & !J2_dffs[1];
J1_dffs[7]_p2_out = !J1_dffs[3] & !J1_dffs[6] & G1L1 & G1L2 & G1L3 & G1L4 & J1_dffs[8] & !J1_dffs[7];
J1_dffs[7] = TFFE(J1_dffs[7]_reg_input, J1_dffs[7]_p3_out, !J1_dffs[7]_p2_out, , );


--G1L1 is FrameTiming:Frame|row_counter_vhdl:pixelRows|Equal0~14
G1L1_p2_out = !NTSCClk & !J2_dffs[2] & !J2_dffs[7] & !J2_dffs[6] & !J2_dffs[5] & !J2_dffs[4] & !J2_dffs[3] & !J2_dffs[1];
G1L1_p3_out = !J2_dffs[2] & !J2_dffs[7] & !J2_dffs[6] & !J2_dffs[5] & !J2_dffs[4] & !J2_dffs[3] & !J2_dffs[1] & !J2_dffs[0];
G1L1_or_out = G1L1_p2_out # G1L1_p3_out # !C1_FormatOut;
G1L1 = J1_dffs[1] $ G1L1_or_out;


--G1L2 is FrameTiming:Frame|row_counter_vhdl:pixelRows|Equal0~20
G1L2_p2_out = !NTSCClk & !J2_dffs[2] & !J2_dffs[7] & !J2_dffs[6] & !J2_dffs[5] & !J2_dffs[4] & !J2_dffs[3] & !J2_dffs[1];
G1L2_p3_out = !J2_dffs[2] & !J2_dffs[7] & !J2_dffs[6] & !J2_dffs[5] & !J2_dffs[4] & !J2_dffs[3] & !J2_dffs[1] & !J2_dffs[0];
G1L2_or_out = G1L2_p2_out # G1L2_p3_out # !C1_FormatOut;
G1L2 = J1_dffs[2] $ G1L2_or_out;


--G1L3 is FrameTiming:Frame|row_counter_vhdl:pixelRows|Equal0~26
G1L3_p2_out = !NTSCClk & !J2_dffs[2] & !J2_dffs[7] & !J2_dffs[6] & !J2_dffs[5] & !J2_dffs[4] & !J2_dffs[3] & !J2_dffs[1];
G1L3_p3_out = !J2_dffs[2] & !J2_dffs[7] & !J2_dffs[6] & !J2_dffs[5] & !J2_dffs[4] & !J2_dffs[3] & !J2_dffs[1] & !J2_dffs[0];
G1L3_or_out = G1L3_p2_out # G1L3_p3_out # !C1_FormatOut;
G1L3 = J1_dffs[4] $ G1L3_or_out;


--G1L4 is FrameTiming:Frame|row_counter_vhdl:pixelRows|Equal0~32
G1L4_p2_out = !NTSCClk & !J2_dffs[2] & !J2_dffs[7] & !J2_dffs[6] & !J2_dffs[5] & !J2_dffs[4] & !J2_dffs[3] & !J2_dffs[1];
G1L4_p3_out = !J2_dffs[2] & !J2_dffs[7] & !J2_dffs[6] & !J2_dffs[5] & !J2_dffs[4] & !J2_dffs[3] & !J2_dffs[1] & !J2_dffs[0];
G1L4_or_out = G1L4_p2_out # G1L4_p3_out # !C1_FormatOut;
G1L4 = J1_dffs[5] $ G1L4_or_out;


--J1_dffs[6] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[6]
J1_dffs[6]_p1_out = J1_dffs[1] & J1_dffs[0] & J1_dffs[2] & J1_dffs[3] & J1_dffs[4] & J1_dffs[5];
J1_dffs[6]_or_out = J1_dffs[6]_p1_out;
J1_dffs[6]_reg_input = J1_dffs[6]_or_out;
J1_dffs[6]_p3_out = J2_dffs[7] & J2_dffs[6] & J2_dffs[5] & !J2_dffs[4] & J2_dffs[2] & !J2_dffs[0] & !J2_dffs[3] & !J2_dffs[1];
J1_dffs[6]_p2_out = !J1_dffs[3] & G1L1 & G1L2 & G1L3 & G1L4 & J1_dffs[8] & !J1_dffs[7] & !J1_dffs[6];
J1_dffs[6] = TFFE(J1_dffs[6]_reg_input, J1_dffs[6]_p3_out, !J1_dffs[6]_p2_out, , );


--J1_dffs[3] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[3]
J1_dffs[3]_p1_out = J1_dffs[1] & J1_dffs[0] & J1_dffs[2];
J1_dffs[3]_or_out = J1_dffs[3]_p1_out;
J1_dffs[3]_reg_input = J1_dffs[3]_or_out;
J1_dffs[3]_p3_out = J2_dffs[7] & J2_dffs[6] & J2_dffs[5] & !J2_dffs[4] & J2_dffs[2] & !J2_dffs[0] & !J2_dffs[3] & !J2_dffs[1];
J1_dffs[3]_p2_out = G1L1 & G1L2 & G1L3 & G1L4 & J1_dffs[8] & !J1_dffs[7] & !J1_dffs[6] & !J1_dffs[3];
J1_dffs[3] = TFFE(J1_dffs[3]_reg_input, J1_dffs[3]_p3_out, !J1_dffs[3]_p2_out, , );


--J1_dffs[4] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[4]
J1_dffs[4]_p1_out = J1_dffs[1] & J1_dffs[0] & J1_dffs[2] & J1_dffs[3];
J1_dffs[4]_or_out = J1_dffs[4]_p1_out;
J1_dffs[4]_reg_input = J1_dffs[4]_or_out;
J1_dffs[4]_p3_out = J2_dffs[7] & J2_dffs[6] & J2_dffs[5] & !J2_dffs[4] & J2_dffs[2] & !J2_dffs[0] & !J2_dffs[3] & !J2_dffs[1];
J1_dffs[4]_p2_out = !J1_dffs[3] & G1L1 & G1L2 & G1L3 & G1L4 & J1_dffs[8] & !J1_dffs[7] & !J1_dffs[6];
J1_dffs[4] = TFFE(J1_dffs[4]_reg_input, J1_dffs[4]_p3_out, !J1_dffs[4]_p2_out, , );


--J1_dffs[2] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[2]
J1_dffs[2]_p1_out = J1_dffs[1] & J1_dffs[0];
J1_dffs[2]_or_out = J1_dffs[2]_p1_out;
J1_dffs[2]_reg_input = J1_dffs[2]_or_out;
J1_dffs[2]_p3_out = J2_dffs[7] & J2_dffs[6] & J2_dffs[5] & !J2_dffs[4] & J2_dffs[2] & !J2_dffs[0] & !J2_dffs[3] & !J2_dffs[1];
J1_dffs[2]_p2_out = G1L1 & G1L2 & G1L3 & G1L4 & J1_dffs[8] & !J1_dffs[7] & !J1_dffs[6] & !J1_dffs[3];
J1_dffs[2] = TFFE(J1_dffs[2]_reg_input, J1_dffs[2]_p3_out, !J1_dffs[2]_p2_out, , );


--J1_dffs[5] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[5]
J1_dffs[5]_p1_out = J1_dffs[1] & J1_dffs[0] & J1_dffs[2] & J1_dffs[3] & J1_dffs[4];
J1_dffs[5]_or_out = J1_dffs[5]_p1_out;
J1_dffs[5]_reg_input = J1_dffs[5]_or_out;
J1_dffs[5]_p3_out = J2_dffs[7] & J2_dffs[6] & J2_dffs[5] & !J2_dffs[4] & J2_dffs[2] & !J2_dffs[0] & !J2_dffs[3] & !J2_dffs[1];
J1_dffs[5]_p2_out = !J1_dffs[3] & G1L1 & G1L2 & G1L3 & G1L4 & J1_dffs[8] & !J1_dffs[7] & !J1_dffs[6];
J1_dffs[5] = TFFE(J1_dffs[5]_reg_input, J1_dffs[5]_p3_out, !J1_dffs[5]_p2_out, , );


--C1_FormatOut is FormatSwitch:FormatSelect|FormatOut
C1_FormatOut_or_out = VCC;
C1_FormatOut_reg_input = C1_FormatOut_or_out;
C1_FormatOut = DFFE(C1_FormatOut_reg_input, D1L1, , , );


--B1L1 is ClockSwitch:ColourClock|Clk~5
B1L1_p1_out = PALClk & C1_FormatOut;
B1L1_p2_out = !C1_FormatOut & NTSCClk;
B1L1_or_out = B1L1_p1_out # B1L1_p2_out;
B1L1 = B1L1_or_out;


--J1_dffs[0] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[0]
J1_dffs[0]_reg_input = VCC;
J1_dffs[0]_p3_out = J2_dffs[7] & J2_dffs[6] & J2_dffs[5] & !J2_dffs[4] & J2_dffs[2] & !J2_dffs[0] & !J2_dffs[3] & !J2_dffs[1];
J1_dffs[0]_p2_out = G1L1 & G1L2 & G1L3 & G1L4 & J1_dffs[8] & !J1_dffs[7] & !J1_dffs[6] & !J1_dffs[3];
J1_dffs[0] = TFFE(J1_dffs[0]_reg_input, J1_dffs[0]_p3_out, !J1_dffs[0]_p2_out, , );


--J1_dffs[1] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[1]
J1_dffs[1]_or_out = J1_dffs[0];
J1_dffs[1]_reg_input = J1_dffs[1]_or_out;
J1_dffs[1]_p3_out = J2_dffs[7] & J2_dffs[6] & J2_dffs[5] & !J2_dffs[4] & J2_dffs[2] & !J2_dffs[0] & !J2_dffs[3] & !J2_dffs[1];
J1_dffs[1]_p2_out = G1L1 & G1L2 & G1L3 & G1L4 & J1_dffs[8] & !J1_dffs[7] & !J1_dffs[6] & !J1_dffs[3];
J1_dffs[1] = TFFE(J1_dffs[1]_reg_input, J1_dffs[1]_p3_out, !J1_dffs[1]_p2_out, , );


--J1_dffs[8] is FrameTiming:Frame|row_counter_vhdl:pixelRows|reg_counter_vhdl:row_counter|lpm_counter:counter_rtl_0|dffs[8]
J1_dffs[8]_p1_out = J1_dffs[1] & J1_dffs[0] & J1_dffs[2] & J1_dffs[3] & J1_dffs[4] & J1_dffs[5] & J1_dffs[6] & J1_dffs[7];
J1_dffs[8]_or_out = J1_dffs[8]_p1_out;
J1_dffs[8]_reg_input = J1_dffs[8]_or_out;
J1_dffs[8]_p3_out = J2_dffs[7] & J2_dffs[6] & J2_dffs[5] & !J2_dffs[4] & J2_dffs[2] & !J2_dffs[0] & !J2_dffs[3] & !J2_dffs[1];
J1_dffs[8]_p2_out = !J1_dffs[3] & !J1_dffs[6] & !J1_dffs[7] & G1L1 & G1L2 & G1L3 & G1L4 & J1_dffs[8];
J1_dffs[8] = TFFE(J1_dffs[8]_reg_input, J1_dffs[8]_p3_out, !J1_dffs[8]_p2_out, , );


--D1L2 is FrameTiming:Frame|LessThan2~3
D1L2_p1_out = !J1_dffs[8] & !J1_dffs[5] & !J1_dffs[4] & !J1_dffs[7] & !J1_dffs[6] & !J1_dffs[3];
D1L2_or_out = D1L2_p1_out;
D1L2 = !(D1L2_or_out);


--~GND~0 is ~GND~0
~GND~0_or_out = GND;
~GND~0 = ~GND~0_or_out;


--D1L1 is FrameTiming:Frame|LessThan2~2bal
D1L1_p1_out = !J1_dffs[8] & !J1_dffs[5] & !J1_dffs[4] & !J1_dffs[7] & !J1_dffs[6] & !J1_dffs[3];
D1L1_or_out = D1L1_p1_out;
D1L1 = !(D1L1_or_out);


--NTSCClk is NTSCClk
--operation mode is input

NTSCClk = INPUT();


--PALClk is PALClk
--operation mode is input

PALClk = INPUT();


--RequestFormat is RequestFormat
--operation mode is input

RequestFormat = INPUT();


--DA0 is DA0
--operation mode is output

DA0 = OUTPUT(~GND~0);


--HSn is HSn
--operation mode is output

HSn = OUTPUT(D1L3);


--row[3] is row[3]
--operation mode is output

row[3] = OUTPUT(J1_dffs[3]);


--row[6] is row[6]
--operation mode is output

row[6] = OUTPUT(J1_dffs[6]);


--row[7] is row[7]
--operation mode is output

row[7] = OUTPUT(J1_dffs[7]);


--row[4] is row[4]
--operation mode is output

row[4] = OUTPUT(J1_dffs[4]);


--row[2] is row[2]
--operation mode is output

row[2] = OUTPUT(J1_dffs[2]);


--row[5] is row[5]
--operation mode is output

row[5] = OUTPUT(J1_dffs[5]);


--Format is Format
--operation mode is output

Format = OUTPUT(C1_FormatOut);


--FormatClk is FormatClk
--operation mode is output

FormatClk = OUTPUT(B1L1);


--row[0] is row[0]
--operation mode is output

row[0] = OUTPUT(J1_dffs[0]);


--row[1] is row[1]
--operation mode is output

row[1] = OUTPUT(J1_dffs[1]);


--row[8] is row[8]
--operation mode is output

row[8] = OUTPUT(J1_dffs[8]);


--FSn is FSn
--operation mode is output

FSn = OUTPUT(D1L2);


